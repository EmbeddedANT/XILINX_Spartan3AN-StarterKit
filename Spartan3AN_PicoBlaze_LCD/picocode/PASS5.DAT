    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; *
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; * picocode.psm - Control of LCD display
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; *
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; *      ___       _         _   _       _ ___ _ _ ___
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; * | __._ _ _| |_ ___ _| |_| |___ _| | . | \ |_ _|
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; * | _>| ' ' | . / ._/ . / . / ._/ . |   |   || |
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; * |___|_|_|_|___\___\___\___\___\___|_|_|_\_||_|
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; *
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; *
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; *  Created on : 20/07/2015
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; *      Author : Ernesto Andres Rincon Cruz
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; *      Web  : www.embeddedant.org
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; *    Device : XC3S700AN - 4FGG484
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; *    Board  : Spartan-3AN Starter Kit.
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; *
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; *  Based on Ken Chapman code v1.00 - 4th January 2006
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; *      Revision History:
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; *   Rev 1.0.0 - (ErnestoARC) First release 16/08/2015.
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; *
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;//////////////////////////////////////////////////////////////////////////////////
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Use CONSTANT declarations to define LCD interface ports
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT LCD_output_port, 00
  LOGFORMAT-CONSTANT LCD_output_port, 00
INSTRUCTION-CONSTANT
   OPERAND1-LCD_output_port
  OP1 VALUE-LCD_output_port
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-;LCD character module output data and control
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT LCD_E, 01
  LOGFORMAT-CONSTANT LCD_E, 01
INSTRUCTION-CONSTANT
   OPERAND1-LCD_E
  OP1 VALUE-LCD_E
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-;   active High Enable        E - bit0
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT LCD_RW, 02
  LOGFORMAT-CONSTANT LCD_RW, 02
INSTRUCTION-CONSTANT
   OPERAND1-LCD_RW
  OP1 VALUE-LCD_RW
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-;   Read=1 Write=0           RW - bit1
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT LCD_RS, 04
  LOGFORMAT-CONSTANT LCD_RS, 04
INSTRUCTION-CONSTANT
   OPERAND1-LCD_RS
  OP1 VALUE-LCD_RS
   OPERAND2-04
  OP2 VALUE-04
    COMMENT-;   Instruction=0 Data=1     RS - bit2
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT LCD_drive, 08
  LOGFORMAT-CONSTANT LCD_drive, 08
INSTRUCTION-CONSTANT
   OPERAND1-LCD_drive
  OP1 VALUE-LCD_drive
   OPERAND2-08
  OP2 VALUE-08
    COMMENT-;   Master enable (active High) - bit3
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT LCD_DB4, 10
  LOGFORMAT-CONSTANT LCD_DB4, 10
INSTRUCTION-CONSTANT
   OPERAND1-LCD_DB4
  OP1 VALUE-LCD_DB4
   OPERAND2-10
  OP2 VALUE-10
    COMMENT-;   4-bit              Data DB4 - bit4
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT LCD_DB5, 20
  LOGFORMAT-CONSTANT LCD_DB5, 20
INSTRUCTION-CONSTANT
   OPERAND1-LCD_DB5
  OP1 VALUE-LCD_DB5
   OPERAND2-20
  OP2 VALUE-20
    COMMENT-;   interface          Data DB5 - bit5
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT LCD_DB6, 40
  LOGFORMAT-CONSTANT LCD_DB6, 40
INSTRUCTION-CONSTANT
   OPERAND1-LCD_DB6
  OP1 VALUE-LCD_DB6
   OPERAND2-40
  OP2 VALUE-40
    COMMENT-;                      Data DB6 - bit6
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT LCD_DB7, 80
  LOGFORMAT-CONSTANT LCD_DB7, 80
INSTRUCTION-CONSTANT
   OPERAND1-LCD_DB7
  OP1 VALUE-LCD_DB7
   OPERAND2-80
  OP2 VALUE-80
    COMMENT-;                      Data DB7 - bit7
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;ASCII table
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_a, 61
  LOGFORMAT-CONSTANT character_a, 61
INSTRUCTION-CONSTANT
   OPERAND1-character_a
  OP1 VALUE-character_a
   OPERAND2-61
  OP2 VALUE-61
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_b, 62
  LOGFORMAT-CONSTANT character_b, 62
INSTRUCTION-CONSTANT
   OPERAND1-character_b
  OP1 VALUE-character_b
   OPERAND2-62
  OP2 VALUE-62
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_c, 63
  LOGFORMAT-CONSTANT character_c, 63
INSTRUCTION-CONSTANT
   OPERAND1-character_c
  OP1 VALUE-character_c
   OPERAND2-63
  OP2 VALUE-63
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_d, 64
  LOGFORMAT-CONSTANT character_d, 64
INSTRUCTION-CONSTANT
   OPERAND1-character_d
  OP1 VALUE-character_d
   OPERAND2-64
  OP2 VALUE-64
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_e, 65
  LOGFORMAT-CONSTANT character_e, 65
INSTRUCTION-CONSTANT
   OPERAND1-character_e
  OP1 VALUE-character_e
   OPERAND2-65
  OP2 VALUE-65
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_f, 66
  LOGFORMAT-CONSTANT character_f, 66
INSTRUCTION-CONSTANT
   OPERAND1-character_f
  OP1 VALUE-character_f
   OPERAND2-66
  OP2 VALUE-66
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_g, 67
  LOGFORMAT-CONSTANT character_g, 67
INSTRUCTION-CONSTANT
   OPERAND1-character_g
  OP1 VALUE-character_g
   OPERAND2-67
  OP2 VALUE-67
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_h, 68
  LOGFORMAT-CONSTANT character_h, 68
INSTRUCTION-CONSTANT
   OPERAND1-character_h
  OP1 VALUE-character_h
   OPERAND2-68
  OP2 VALUE-68
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_i, 69
  LOGFORMAT-CONSTANT character_i, 69
INSTRUCTION-CONSTANT
   OPERAND1-character_i
  OP1 VALUE-character_i
   OPERAND2-69
  OP2 VALUE-69
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_j, 6A
  LOGFORMAT-CONSTANT character_j, 6A
INSTRUCTION-CONSTANT
   OPERAND1-character_j
  OP1 VALUE-character_j
   OPERAND2-6A
  OP2 VALUE-6A
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_k, 6B
  LOGFORMAT-CONSTANT character_k, 6B
INSTRUCTION-CONSTANT
   OPERAND1-character_k
  OP1 VALUE-character_k
   OPERAND2-6B
  OP2 VALUE-6B
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_l, 6C
  LOGFORMAT-CONSTANT character_l, 6C
INSTRUCTION-CONSTANT
   OPERAND1-character_l
  OP1 VALUE-character_l
   OPERAND2-6C
  OP2 VALUE-6C
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_m, 6D
  LOGFORMAT-CONSTANT character_m, 6D
INSTRUCTION-CONSTANT
   OPERAND1-character_m
  OP1 VALUE-character_m
   OPERAND2-6D
  OP2 VALUE-6D
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_n, 6E
  LOGFORMAT-CONSTANT character_n, 6E
INSTRUCTION-CONSTANT
   OPERAND1-character_n
  OP1 VALUE-character_n
   OPERAND2-6E
  OP2 VALUE-6E
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_o, 6F
  LOGFORMAT-CONSTANT character_o, 6F
INSTRUCTION-CONSTANT
   OPERAND1-character_o
  OP1 VALUE-character_o
   OPERAND2-6F
  OP2 VALUE-6F
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_p, 70
  LOGFORMAT-CONSTANT character_p, 70
INSTRUCTION-CONSTANT
   OPERAND1-character_p
  OP1 VALUE-character_p
   OPERAND2-70
  OP2 VALUE-70
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_q, 71
  LOGFORMAT-CONSTANT character_q, 71
INSTRUCTION-CONSTANT
   OPERAND1-character_q
  OP1 VALUE-character_q
   OPERAND2-71
  OP2 VALUE-71
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_r, 72
  LOGFORMAT-CONSTANT character_r, 72
INSTRUCTION-CONSTANT
   OPERAND1-character_r
  OP1 VALUE-character_r
   OPERAND2-72
  OP2 VALUE-72
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_s, 73
  LOGFORMAT-CONSTANT character_s, 73
INSTRUCTION-CONSTANT
   OPERAND1-character_s
  OP1 VALUE-character_s
   OPERAND2-73
  OP2 VALUE-73
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_t, 74
  LOGFORMAT-CONSTANT character_t, 74
INSTRUCTION-CONSTANT
   OPERAND1-character_t
  OP1 VALUE-character_t
   OPERAND2-74
  OP2 VALUE-74
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_u, 75
  LOGFORMAT-CONSTANT character_u, 75
INSTRUCTION-CONSTANT
   OPERAND1-character_u
  OP1 VALUE-character_u
   OPERAND2-75
  OP2 VALUE-75
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_v, 76
  LOGFORMAT-CONSTANT character_v, 76
INSTRUCTION-CONSTANT
   OPERAND1-character_v
  OP1 VALUE-character_v
   OPERAND2-76
  OP2 VALUE-76
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_w, 77
  LOGFORMAT-CONSTANT character_w, 77
INSTRUCTION-CONSTANT
   OPERAND1-character_w
  OP1 VALUE-character_w
   OPERAND2-77
  OP2 VALUE-77
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_x, 78
  LOGFORMAT-CONSTANT character_x, 78
INSTRUCTION-CONSTANT
   OPERAND1-character_x
  OP1 VALUE-character_x
   OPERAND2-78
  OP2 VALUE-78
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_y, 79
  LOGFORMAT-CONSTANT character_y, 79
INSTRUCTION-CONSTANT
   OPERAND1-character_y
  OP1 VALUE-character_y
   OPERAND2-79
  OP2 VALUE-79
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_z, 7A
  LOGFORMAT-CONSTANT character_z, 7A
INSTRUCTION-CONSTANT
   OPERAND1-character_z
  OP1 VALUE-character_z
   OPERAND2-7A
  OP2 VALUE-7A
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_A, 41
  LOGFORMAT-CONSTANT character_A, 41
INSTRUCTION-CONSTANT
   OPERAND1-character_A
  OP1 VALUE-character_A
   OPERAND2-41
  OP2 VALUE-41
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_B, 42
  LOGFORMAT-CONSTANT character_B, 42
INSTRUCTION-CONSTANT
   OPERAND1-character_B
  OP1 VALUE-character_B
   OPERAND2-42
  OP2 VALUE-42
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_C, 43
  LOGFORMAT-CONSTANT character_C, 43
INSTRUCTION-CONSTANT
   OPERAND1-character_C
  OP1 VALUE-character_C
   OPERAND2-43
  OP2 VALUE-43
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_D, 44
  LOGFORMAT-CONSTANT character_D, 44
INSTRUCTION-CONSTANT
   OPERAND1-character_D
  OP1 VALUE-character_D
   OPERAND2-44
  OP2 VALUE-44
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_E, 45
  LOGFORMAT-CONSTANT character_E, 45
INSTRUCTION-CONSTANT
   OPERAND1-character_E
  OP1 VALUE-character_E
   OPERAND2-45
  OP2 VALUE-45
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_F, 46
  LOGFORMAT-CONSTANT character_F, 46
INSTRUCTION-CONSTANT
   OPERAND1-character_F
  OP1 VALUE-character_F
   OPERAND2-46
  OP2 VALUE-46
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_G, 47
  LOGFORMAT-CONSTANT character_G, 47
INSTRUCTION-CONSTANT
   OPERAND1-character_G
  OP1 VALUE-character_G
   OPERAND2-47
  OP2 VALUE-47
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_H, 48
  LOGFORMAT-CONSTANT character_H, 48
INSTRUCTION-CONSTANT
   OPERAND1-character_H
  OP1 VALUE-character_H
   OPERAND2-48
  OP2 VALUE-48
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_I, 49
  LOGFORMAT-CONSTANT character_I, 49
INSTRUCTION-CONSTANT
   OPERAND1-character_I
  OP1 VALUE-character_I
   OPERAND2-49
  OP2 VALUE-49
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_J, 4A
  LOGFORMAT-CONSTANT character_J, 4A
INSTRUCTION-CONSTANT
   OPERAND1-character_J
  OP1 VALUE-character_J
   OPERAND2-4A
  OP2 VALUE-4A
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_K, 4B
  LOGFORMAT-CONSTANT character_K, 4B
INSTRUCTION-CONSTANT
   OPERAND1-character_K
  OP1 VALUE-character_K
   OPERAND2-4B
  OP2 VALUE-4B
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_L, 4C
  LOGFORMAT-CONSTANT character_L, 4C
INSTRUCTION-CONSTANT
   OPERAND1-character_L
  OP1 VALUE-character_L
   OPERAND2-4C
  OP2 VALUE-4C
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_M, 4D
  LOGFORMAT-CONSTANT character_M, 4D
INSTRUCTION-CONSTANT
   OPERAND1-character_M
  OP1 VALUE-character_M
   OPERAND2-4D
  OP2 VALUE-4D
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_N, 4E
  LOGFORMAT-CONSTANT character_N, 4E
INSTRUCTION-CONSTANT
   OPERAND1-character_N
  OP1 VALUE-character_N
   OPERAND2-4E
  OP2 VALUE-4E
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_O, 4F
  LOGFORMAT-CONSTANT character_O, 4F
INSTRUCTION-CONSTANT
   OPERAND1-character_O
  OP1 VALUE-character_O
   OPERAND2-4F
  OP2 VALUE-4F
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_P, 50
  LOGFORMAT-CONSTANT character_P, 50
INSTRUCTION-CONSTANT
   OPERAND1-character_P
  OP1 VALUE-character_P
   OPERAND2-50
  OP2 VALUE-50
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_Q, 51
  LOGFORMAT-CONSTANT character_Q, 51
INSTRUCTION-CONSTANT
   OPERAND1-character_Q
  OP1 VALUE-character_Q
   OPERAND2-51
  OP2 VALUE-51
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_R, 52
  LOGFORMAT-CONSTANT character_R, 52
INSTRUCTION-CONSTANT
   OPERAND1-character_R
  OP1 VALUE-character_R
   OPERAND2-52
  OP2 VALUE-52
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_S, 53
  LOGFORMAT-CONSTANT character_S, 53
INSTRUCTION-CONSTANT
   OPERAND1-character_S
  OP1 VALUE-character_S
   OPERAND2-53
  OP2 VALUE-53
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_T, 54
  LOGFORMAT-CONSTANT character_T, 54
INSTRUCTION-CONSTANT
   OPERAND1-character_T
  OP1 VALUE-character_T
   OPERAND2-54
  OP2 VALUE-54
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_U, 55
  LOGFORMAT-CONSTANT character_U, 55
INSTRUCTION-CONSTANT
   OPERAND1-character_U
  OP1 VALUE-character_U
   OPERAND2-55
  OP2 VALUE-55
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_V, 56
  LOGFORMAT-CONSTANT character_V, 56
INSTRUCTION-CONSTANT
   OPERAND1-character_V
  OP1 VALUE-character_V
   OPERAND2-56
  OP2 VALUE-56
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_W, 57
  LOGFORMAT-CONSTANT character_W, 57
INSTRUCTION-CONSTANT
   OPERAND1-character_W
  OP1 VALUE-character_W
   OPERAND2-57
  OP2 VALUE-57
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_X, 58
  LOGFORMAT-CONSTANT character_X, 58
INSTRUCTION-CONSTANT
   OPERAND1-character_X
  OP1 VALUE-character_X
   OPERAND2-58
  OP2 VALUE-58
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_Y, 59
  LOGFORMAT-CONSTANT character_Y, 59
INSTRUCTION-CONSTANT
   OPERAND1-character_Y
  OP1 VALUE-character_Y
   OPERAND2-59
  OP2 VALUE-59
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_Z, 5A
  LOGFORMAT-CONSTANT character_Z, 5A
INSTRUCTION-CONSTANT
   OPERAND1-character_Z
  OP1 VALUE-character_Z
   OPERAND2-5A
  OP2 VALUE-5A
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_0, 30
  LOGFORMAT-CONSTANT character_0, 30
INSTRUCTION-CONSTANT
   OPERAND1-character_0
  OP1 VALUE-character_0
   OPERAND2-30
  OP2 VALUE-30
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_1, 31
  LOGFORMAT-CONSTANT character_1, 31
INSTRUCTION-CONSTANT
   OPERAND1-character_1
  OP1 VALUE-character_1
   OPERAND2-31
  OP2 VALUE-31
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_2, 32
  LOGFORMAT-CONSTANT character_2, 32
INSTRUCTION-CONSTANT
   OPERAND1-character_2
  OP1 VALUE-character_2
   OPERAND2-32
  OP2 VALUE-32
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_3, 33
  LOGFORMAT-CONSTANT character_3, 33
INSTRUCTION-CONSTANT
   OPERAND1-character_3
  OP1 VALUE-character_3
   OPERAND2-33
  OP2 VALUE-33
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_4, 34
  LOGFORMAT-CONSTANT character_4, 34
INSTRUCTION-CONSTANT
   OPERAND1-character_4
  OP1 VALUE-character_4
   OPERAND2-34
  OP2 VALUE-34
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_5, 35
  LOGFORMAT-CONSTANT character_5, 35
INSTRUCTION-CONSTANT
   OPERAND1-character_5
  OP1 VALUE-character_5
   OPERAND2-35
  OP2 VALUE-35
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_6, 36
  LOGFORMAT-CONSTANT character_6, 36
INSTRUCTION-CONSTANT
   OPERAND1-character_6
  OP1 VALUE-character_6
   OPERAND2-36
  OP2 VALUE-36
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_7, 37
  LOGFORMAT-CONSTANT character_7, 37
INSTRUCTION-CONSTANT
   OPERAND1-character_7
  OP1 VALUE-character_7
   OPERAND2-37
  OP2 VALUE-37
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_8, 38
  LOGFORMAT-CONSTANT character_8, 38
INSTRUCTION-CONSTANT
   OPERAND1-character_8
  OP1 VALUE-character_8
   OPERAND2-38
  OP2 VALUE-38
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_9, 39
  LOGFORMAT-CONSTANT character_9, 39
INSTRUCTION-CONSTANT
   OPERAND1-character_9
  OP1 VALUE-character_9
   OPERAND2-39
  OP2 VALUE-39
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_colon, 3A
  LOGFORMAT-CONSTANT character_colon, 3A
INSTRUCTION-CONSTANT
   OPERAND1-character_colon
  OP1 VALUE-character_colon
   OPERAND2-3A
  OP2 VALUE-3A
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_stop, 2E
  LOGFORMAT-CONSTANT character_stop, 2E
INSTRUCTION-CONSTANT
   OPERAND1-character_stop
  OP1 VALUE-character_stop
   OPERAND2-2E
  OP2 VALUE-2E
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_semi_colon, 3B
  LOGFORMAT-CONSTANT character_semi_colon, 3B
INSTRUCTION-CONSTANT
   OPERAND1-character_semi_colon
  OP1 VALUE-character_semi_colon
   OPERAND2-3B
  OP2 VALUE-3B
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_minus, 2D
  LOGFORMAT-CONSTANT character_minus, 2D
INSTRUCTION-CONSTANT
   OPERAND1-character_minus
  OP1 VALUE-character_minus
   OPERAND2-2D
  OP2 VALUE-2D
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_divide, 2F
  LOGFORMAT-CONSTANT character_divide, 2F
INSTRUCTION-CONSTANT
   OPERAND1-character_divide
  OP1 VALUE-character_divide
   OPERAND2-2F
  OP2 VALUE-2F
    COMMENT-;'/'
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_plus, 2B
  LOGFORMAT-CONSTANT character_plus, 2B
INSTRUCTION-CONSTANT
   OPERAND1-character_plus
  OP1 VALUE-character_plus
   OPERAND2-2B
  OP2 VALUE-2B
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_comma, 2C
  LOGFORMAT-CONSTANT character_comma, 2C
INSTRUCTION-CONSTANT
   OPERAND1-character_comma
  OP1 VALUE-character_comma
   OPERAND2-2C
  OP2 VALUE-2C
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_less_than, 3C
  LOGFORMAT-CONSTANT character_less_than, 3C
INSTRUCTION-CONSTANT
   OPERAND1-character_less_than
  OP1 VALUE-character_less_than
   OPERAND2-3C
  OP2 VALUE-3C
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_greater_than, 3E
  LOGFORMAT-CONSTANT character_greater_than, 3E
INSTRUCTION-CONSTANT
   OPERAND1-character_greater_than
  OP1 VALUE-character_greater_than
   OPERAND2-3E
  OP2 VALUE-3E
    COMMENT-;>
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_equals, 3D
  LOGFORMAT-CONSTANT character_equals, 3D
INSTRUCTION-CONSTANT
   OPERAND1-character_equals
  OP1 VALUE-character_equals
   OPERAND2-3D
  OP2 VALUE-3D
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_space, 20
  LOGFORMAT-CONSTANT character_space, 20
INSTRUCTION-CONSTANT
   OPERAND1-character_space
  OP1 VALUE-character_space
   OPERAND2-20
  OP2 VALUE-20
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_CR, 0D
  LOGFORMAT-CONSTANT character_CR, 0D
INSTRUCTION-CONSTANT
   OPERAND1-character_CR
  OP1 VALUE-character_CR
   OPERAND2-0D
  OP2 VALUE-0D
    COMMENT-;carriage return
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_question, 3F
  LOGFORMAT-CONSTANT character_question, 3F
INSTRUCTION-CONSTANT
   OPERAND1-character_question
  OP1 VALUE-character_question
   OPERAND2-3F
  OP2 VALUE-3F
    COMMENT-;'?'
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_dollar, 24
  LOGFORMAT-CONSTANT character_dollar, 24
INSTRUCTION-CONSTANT
   OPERAND1-character_dollar
  OP1 VALUE-character_dollar
   OPERAND2-24
  OP2 VALUE-24
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_exclaim, 21
  LOGFORMAT-CONSTANT character_exclaim, 21
INSTRUCTION-CONSTANT
   OPERAND1-character_exclaim
  OP1 VALUE-character_exclaim
   OPERAND2-21
  OP2 VALUE-21
    COMMENT-;'!'
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT character_BS, 08
  LOGFORMAT-CONSTANT character_BS, 08
INSTRUCTION-CONSTANT
   OPERAND1-character_BS
  OP1 VALUE-character_BS
   OPERAND2-08
  OP2 VALUE-08
    COMMENT-;Back Space command character
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-000
      LABEL-
  FORMATTED-ADDRESS 000
  LOGFORMAT-ADDRESS 000
INSTRUCTION-ADDRESS
   OPERAND1-000
  OP1 VALUE-000
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Programs always start at reset vector 0
    ADDRESS-000
      LABEL-
  FORMATTED-DISABLE INTERRUPT
  LOGFORMAT-DISABLE INTERRUPT
INSTRUCTION-DISABLE
   OPERAND1-INTERRUPT
  OP1 VALUE-INTERRUPT
   OPERAND2-
  OP2 VALUE-
    COMMENT-; If using interrupts, be sure to enable the INTERRUPT input
    ADDRESS-001
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-001
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;
    ADDRESS-001
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-001
      LABEL-BEGIN
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-001
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; <<< your code here >>>
    ADDRESS-001
      LABEL-
  FORMATTED-CALL LCD_reset
  LOGFORMAT-CALL LCD_reset[0D3]
INSTRUCTION-CALL
   OPERAND1-LCD_reset
  OP1 VALUE-0D3
   OPERAND2-
  OP2 VALUE-
    COMMENT-;initialise LCD display
    ADDRESS-002
      LABEL-
  FORMATTED-LOAD s5, 10
  LOGFORMAT-LOAD s5, 10
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-10
  OP2 VALUE-10
    COMMENT-;Line 1 position 0
    ADDRESS-003
      LABEL-
  FORMATTED-CALL LCD_cursor
  LOGFORMAT-CALL LCD_cursor[0EB]
INSTRUCTION-CALL
   OPERAND1-LCD_cursor
  OP1 VALUE-0EB
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-004
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-------------------------------- Start First Display Line 1
    ADDRESS-004
      LABEL-
  FORMATTED-LOAD s5, character_space
  LOGFORMAT-LOAD s5, character_space[20]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_space
  OP2 VALUE-20
    COMMENT-
    ADDRESS-005
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-006
      LABEL-
  FORMATTED-LOAD s5, character_space
  LOGFORMAT-LOAD s5, character_space[20]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_space
  OP2 VALUE-20
    COMMENT-
    ADDRESS-007
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-008
      LABEL-
  FORMATTED-LOAD s5, character_space
  LOGFORMAT-LOAD s5, character_space[20]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_space
  OP2 VALUE-20
    COMMENT-
    ADDRESS-009
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-00A
      LABEL-
  FORMATTED-LOAD s5, character_P
  LOGFORMAT-LOAD s5, character_P[50]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_P
  OP2 VALUE-50
    COMMENT-
    ADDRESS-00B
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-00C
      LABEL-
  FORMATTED-LOAD s5, character_i
  LOGFORMAT-LOAD s5, character_i[69]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_i
  OP2 VALUE-69
    COMMENT-
    ADDRESS-00D
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-00E
      LABEL-
  FORMATTED-LOAD s5, character_c
  LOGFORMAT-LOAD s5, character_c[63]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_c
  OP2 VALUE-63
    COMMENT-
    ADDRESS-00F
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-010
      LABEL-
  FORMATTED-LOAD s5, character_o
  LOGFORMAT-LOAD s5, character_o[6F]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_o
  OP2 VALUE-6F
    COMMENT-
    ADDRESS-011
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-012
      LABEL-
  FORMATTED-LOAD s5, character_B
  LOGFORMAT-LOAD s5, character_B[42]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_B
  OP2 VALUE-42
    COMMENT-
    ADDRESS-013
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-014
      LABEL-
  FORMATTED-LOAD s5, character_l
  LOGFORMAT-LOAD s5, character_l[6C]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_l
  OP2 VALUE-6C
    COMMENT-
    ADDRESS-015
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-016
      LABEL-
  FORMATTED-LOAD s5, character_a
  LOGFORMAT-LOAD s5, character_a[61]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_a
  OP2 VALUE-61
    COMMENT-
    ADDRESS-017
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-018
      LABEL-
  FORMATTED-LOAD s5, character_z
  LOGFORMAT-LOAD s5, character_z[7A]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_z
  OP2 VALUE-7A
    COMMENT-
    ADDRESS-019
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-01A
      LABEL-
  FORMATTED-LOAD s5, character_e
  LOGFORMAT-LOAD s5, character_e[65]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_e
  OP2 VALUE-65
    COMMENT-
    ADDRESS-01B
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-01C
      LABEL-
  FORMATTED-LOAD s5, character_space
  LOGFORMAT-LOAD s5, character_space[20]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_space
  OP2 VALUE-20
    COMMENT-
    ADDRESS-01D
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-01E
      LABEL-
  FORMATTED-LOAD s5, character_space
  LOGFORMAT-LOAD s5, character_space[20]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_space
  OP2 VALUE-20
    COMMENT-
    ADDRESS-01F
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-020
      LABEL-
  FORMATTED-LOAD s5, character_space
  LOGFORMAT-LOAD s5, character_space[20]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_space
  OP2 VALUE-20
    COMMENT-
    ADDRESS-021
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-022
      LABEL-
  FORMATTED-LOAD s5, character_space
  LOGFORMAT-LOAD s5, character_space[20]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_space
  OP2 VALUE-20
    COMMENT-
    ADDRESS-023
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-024
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-------------------------------- Start Second Display Line 1
    ADDRESS-024
      LABEL-
  FORMATTED-LOAD s5, character_e
  LOGFORMAT-LOAD s5, character_e[65]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_e
  OP2 VALUE-65
    COMMENT-
    ADDRESS-025
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-026
      LABEL-
  FORMATTED-LOAD s5, character_m
  LOGFORMAT-LOAD s5, character_m[6D]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_m
  OP2 VALUE-6D
    COMMENT-
    ADDRESS-027
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-028
      LABEL-
  FORMATTED-LOAD s5, character_b
  LOGFORMAT-LOAD s5, character_b[62]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_b
  OP2 VALUE-62
    COMMENT-
    ADDRESS-029
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-02A
      LABEL-
  FORMATTED-LOAD s5, character_e
  LOGFORMAT-LOAD s5, character_e[65]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_e
  OP2 VALUE-65
    COMMENT-
    ADDRESS-02B
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-02C
      LABEL-
  FORMATTED-LOAD s5, character_d
  LOGFORMAT-LOAD s5, character_d[64]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_d
  OP2 VALUE-64
    COMMENT-
    ADDRESS-02D
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-02E
      LABEL-
  FORMATTED-LOAD s5, character_d
  LOGFORMAT-LOAD s5, character_d[64]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_d
  OP2 VALUE-64
    COMMENT-
    ADDRESS-02F
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-030
      LABEL-
  FORMATTED-LOAD s5, character_e
  LOGFORMAT-LOAD s5, character_e[65]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_e
  OP2 VALUE-65
    COMMENT-
    ADDRESS-031
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-032
      LABEL-
  FORMATTED-LOAD s5, character_d
  LOGFORMAT-LOAD s5, character_d[64]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_d
  OP2 VALUE-64
    COMMENT-
    ADDRESS-033
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-034
      LABEL-
  FORMATTED-LOAD s5, character_a
  LOGFORMAT-LOAD s5, character_a[61]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_a
  OP2 VALUE-61
    COMMENT-
    ADDRESS-035
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-036
      LABEL-
  FORMATTED-LOAD s5, character_n
  LOGFORMAT-LOAD s5, character_n[6E]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_n
  OP2 VALUE-6E
    COMMENT-
    ADDRESS-037
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-038
      LABEL-
  FORMATTED-LOAD s5, character_t
  LOGFORMAT-LOAD s5, character_t[74]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_t
  OP2 VALUE-74
    COMMENT-
    ADDRESS-039
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-03A
      LABEL-
  FORMATTED-LOAD s5, character_stop
  LOGFORMAT-LOAD s5, character_stop[2E]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_stop
  OP2 VALUE-2E
    COMMENT-
    ADDRESS-03B
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-03C
      LABEL-
  FORMATTED-LOAD s5, character_o
  LOGFORMAT-LOAD s5, character_o[6F]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_o
  OP2 VALUE-6F
    COMMENT-
    ADDRESS-03D
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-03E
      LABEL-
  FORMATTED-LOAD s5, character_r
  LOGFORMAT-LOAD s5, character_r[72]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_r
  OP2 VALUE-72
    COMMENT-
    ADDRESS-03F
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-040
      LABEL-
  FORMATTED-LOAD s5, character_g
  LOGFORMAT-LOAD s5, character_g[67]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_g
  OP2 VALUE-67
    COMMENT-
    ADDRESS-041
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-042
      LABEL-
  FORMATTED-LOAD s5, character_space
  LOGFORMAT-LOAD s5, character_space[20]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_space
  OP2 VALUE-20
    COMMENT-
    ADDRESS-043
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-044
      LABEL-
  FORMATTED-LOAD s5, 20
  LOGFORMAT-LOAD s5, 20
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-20
  OP2 VALUE-20
    COMMENT-;Line 2 position 0
    ADDRESS-045
      LABEL-
  FORMATTED-CALL LCD_cursor
  LOGFORMAT-CALL LCD_cursor[0EB]
INSTRUCTION-CALL
   OPERAND1-LCD_cursor
  OP1 VALUE-0EB
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-046
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-------------------------------- Start First Display Line 2
    ADDRESS-046
      LABEL-
  FORMATTED-LOAD s5, character_space
  LOGFORMAT-LOAD s5, character_space[20]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_space
  OP2 VALUE-20
    COMMENT-
    ADDRESS-047
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-048
      LABEL-
  FORMATTED-LOAD s5, character_space
  LOGFORMAT-LOAD s5, character_space[20]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_space
  OP2 VALUE-20
    COMMENT-
    ADDRESS-049
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-04A
      LABEL-
  FORMATTED-LOAD s5, character_S
  LOGFORMAT-LOAD s5, character_S[53]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_S
  OP2 VALUE-53
    COMMENT-
    ADDRESS-04B
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-04C
      LABEL-
  FORMATTED-LOAD s5, character_P
  LOGFORMAT-LOAD s5, character_P[50]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_P
  OP2 VALUE-50
    COMMENT-
    ADDRESS-04D
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-04E
      LABEL-
  FORMATTED-LOAD s5, character_A
  LOGFORMAT-LOAD s5, character_A[41]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_A
  OP2 VALUE-41
    COMMENT-
    ADDRESS-04F
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-050
      LABEL-
  FORMATTED-LOAD s5, character_R
  LOGFORMAT-LOAD s5, character_R[52]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_R
  OP2 VALUE-52
    COMMENT-
    ADDRESS-051
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-052
      LABEL-
  FORMATTED-LOAD s5, character_T
  LOGFORMAT-LOAD s5, character_T[54]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_T
  OP2 VALUE-54
    COMMENT-
    ADDRESS-053
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-054
      LABEL-
  FORMATTED-LOAD s5, character_A
  LOGFORMAT-LOAD s5, character_A[41]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_A
  OP2 VALUE-41
    COMMENT-
    ADDRESS-055
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-056
      LABEL-
  FORMATTED-LOAD s5, character_N
  LOGFORMAT-LOAD s5, character_N[4E]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_N
  OP2 VALUE-4E
    COMMENT-
    ADDRESS-057
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-058
      LABEL-
  FORMATTED-LOAD s5, character_minus
  LOGFORMAT-LOAD s5, character_minus[2D]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_minus
  OP2 VALUE-2D
    COMMENT-
    ADDRESS-059
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-05A
      LABEL-
  FORMATTED-LOAD s5, character_3
  LOGFORMAT-LOAD s5, character_3[33]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_3
  OP2 VALUE-33
    COMMENT-
    ADDRESS-05B
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-05C
      LABEL-
  FORMATTED-LOAD s5, character_A
  LOGFORMAT-LOAD s5, character_A[41]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_A
  OP2 VALUE-41
    COMMENT-
    ADDRESS-05D
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-05E
      LABEL-
  FORMATTED-LOAD s5, character_N
  LOGFORMAT-LOAD s5, character_N[4E]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_N
  OP2 VALUE-4E
    COMMENT-
    ADDRESS-05F
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-060
      LABEL-
  FORMATTED-LOAD s5, character_space
  LOGFORMAT-LOAD s5, character_space[20]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_space
  OP2 VALUE-20
    COMMENT-
    ADDRESS-061
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-062
      LABEL-
  FORMATTED-LOAD s5, character_space
  LOGFORMAT-LOAD s5, character_space[20]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_space
  OP2 VALUE-20
    COMMENT-
    ADDRESS-063
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-064
      LABEL-
  FORMATTED-LOAD s5, character_space
  LOGFORMAT-LOAD s5, character_space[20]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_space
  OP2 VALUE-20
    COMMENT-
    ADDRESS-065
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-066
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-------------------------------- Start Second Display Line 2
    ADDRESS-066
      LABEL-
  FORMATTED-LOAD s5, character_space
  LOGFORMAT-LOAD s5, character_space[20]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_space
  OP2 VALUE-20
    COMMENT-
    ADDRESS-067
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-068
      LABEL-
  FORMATTED-LOAD s5, character_1
  LOGFORMAT-LOAD s5, character_1[31]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_1
  OP2 VALUE-31
    COMMENT-
    ADDRESS-069
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-06A
      LABEL-
  FORMATTED-LOAD s5, character_2
  LOGFORMAT-LOAD s5, character_2[32]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_2
  OP2 VALUE-32
    COMMENT-
    ADDRESS-06B
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-06C
      LABEL-
  FORMATTED-LOAD s5, character_minus
  LOGFORMAT-LOAD s5, character_minus[2D]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_minus
  OP2 VALUE-2D
    COMMENT-
    ADDRESS-06D
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-06E
      LABEL-
  FORMATTED-LOAD s5, character_A
  LOGFORMAT-LOAD s5, character_A[41]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_A
  OP2 VALUE-41
    COMMENT-
    ADDRESS-06F
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-070
      LABEL-
  FORMATTED-LOAD s5, character_u
  LOGFORMAT-LOAD s5, character_u[75]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_u
  OP2 VALUE-75
    COMMENT-
    ADDRESS-071
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-072
      LABEL-
  FORMATTED-LOAD s5, character_g
  LOGFORMAT-LOAD s5, character_g[67]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_g
  OP2 VALUE-67
    COMMENT-
    ADDRESS-073
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-074
      LABEL-
  FORMATTED-LOAD s5, character_u
  LOGFORMAT-LOAD s5, character_u[75]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_u
  OP2 VALUE-75
    COMMENT-
    ADDRESS-075
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-076
      LABEL-
  FORMATTED-LOAD s5, character_s
  LOGFORMAT-LOAD s5, character_s[73]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_s
  OP2 VALUE-73
    COMMENT-
    ADDRESS-077
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-078
      LABEL-
  FORMATTED-LOAD s5, character_t
  LOGFORMAT-LOAD s5, character_t[74]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_t
  OP2 VALUE-74
    COMMENT-
    ADDRESS-079
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-07A
      LABEL-
  FORMATTED-LOAD s5, character_minus
  LOGFORMAT-LOAD s5, character_minus[2D]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_minus
  OP2 VALUE-2D
    COMMENT-
    ADDRESS-07B
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-07C
      LABEL-
  FORMATTED-LOAD s5, character_2
  LOGFORMAT-LOAD s5, character_2[32]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_2
  OP2 VALUE-32
    COMMENT-
    ADDRESS-07D
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-07E
      LABEL-
  FORMATTED-LOAD s5, character_0
  LOGFORMAT-LOAD s5, character_0[30]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_0
  OP2 VALUE-30
    COMMENT-
    ADDRESS-07F
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-080
      LABEL-
  FORMATTED-LOAD s5, character_1
  LOGFORMAT-LOAD s5, character_1[31]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_1
  OP2 VALUE-31
    COMMENT-
    ADDRESS-081
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-082
      LABEL-
  FORMATTED-LOAD s5, character_5
  LOGFORMAT-LOAD s5, character_5[35]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_5
  OP2 VALUE-35
    COMMENT-
    ADDRESS-083
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-084
      LABEL-
  FORMATTED-LOAD s5, character_space
  LOGFORMAT-LOAD s5, character_space[20]
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-character_space
  OP2 VALUE-20
    COMMENT-
    ADDRESS-085
      LABEL-
  FORMATTED-CALL LCD_write_data
  LOGFORMAT-CALL LCD_write_data[0C0]
INSTRUCTION-CALL
   OPERAND1-LCD_write_data
  OP1 VALUE-0C0
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-086
      LABEL-LOOP
  FORMATTED-CALL LCD_shift_left
  LOGFORMAT-CALL LCD_shift_left[0F5]
INSTRUCTION-CALL
   OPERAND1-LCD_shift_left
  OP1 VALUE-0F5
   OPERAND2-
  OP2 VALUE-
    COMMENT-;shift LCD display
    ADDRESS-087
      LABEL-
  FORMATTED-LOAD s3, FF
  LOGFORMAT-LOAD s3, FF
INSTRUCTION-LOAD
   OPERAND1-s3
  OP1 VALUE-s3
   OPERAND2-FF
  OP2 VALUE-FF
    COMMENT-; Call delay x 255ms
    ADDRESS-088
      LABEL-
  FORMATTED-CALL delay_ms
  LOGFORMAT-CALL delay_ms[0A2]
INSTRUCTION-CALL
   OPERAND1-delay_ms
  OP1 VALUE-0A2
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-089
      LABEL-
  FORMATTED-JUMP LOOP
  LOGFORMAT-JUMP LOOP[086]
INSTRUCTION-JUMP
   OPERAND1-LOOP
  OP1 VALUE-086
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Embedded applications never end
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;**************************************************************************************
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Software delay routines
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;**************************************************************************************
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; delay_1us_constant =  (clock_rate - 6)/4       Where 'clock_rate' is in MHz
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Example: For a 50MHz clock the constant value is (10-6)/4 = 11  (0B Hex).
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;For clock rates below 10MHz the value of 1 must be used and the operation will
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;become lower than intended.
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-08A
      LABEL-
  FORMATTED-CONSTANT delay_1us_constant, 0B
  LOGFORMAT-CONSTANT delay_1us_constant, 0B
INSTRUCTION-CONSTANT
   OPERAND1-delay_1us_constant
  OP1 VALUE-delay_1us_constant
   OPERAND2-0B
  OP2 VALUE-0B
    COMMENT-
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Delay of 1us.
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Constant value defines reflects the clock applied to KCPSM3. Every instruction
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;executes in 2 clock cycles making the calculation highly predictable. The '6' in
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;the following equation even allows for 'CALL delay_1us' instruction in the initiating code.
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; delay_1us_constant =  (clock_rate - 6)/4       Where 'clock_rate' is in MHz
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Registers used s0
    ADDRESS-08A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-08A
      LABEL-delay_1us
  FORMATTED-LOAD s0, delay_1us_constant
  LOGFORMAT-LOAD s0, delay_1us_constant[0B]
INSTRUCTION-LOAD
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-delay_1us_constant
  OP2 VALUE-0B
    COMMENT-
    ADDRESS-08B
      LABEL-wait_1us
  FORMATTED-SUB s0, 01
  LOGFORMAT-SUB s0, 01
INSTRUCTION-SUB
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-08C
      LABEL-
  FORMATTED-JUMP NZ, wait_1us
  LOGFORMAT-JUMP NZ, wait_1us[08B]
INSTRUCTION-JUMP
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-wait_1us
  OP2 VALUE-08B
    COMMENT-
    ADDRESS-08D
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-08E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-08E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Delay of 40us.
    ADDRESS-08E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-08E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Registers used s0, s1
    ADDRESS-08E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-08E
      LABEL-delay_40us
  FORMATTED-LOAD s1, 28
  LOGFORMAT-LOAD s1, 28
INSTRUCTION-LOAD
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-28
  OP2 VALUE-28
    COMMENT-;40 x 1us = 40us
    ADDRESS-08F
      LABEL-wait_40us
  FORMATTED-CALL delay_1us
  LOGFORMAT-CALL delay_1us[08A]
INSTRUCTION-CALL
   OPERAND1-delay_1us
  OP1 VALUE-08A
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-090
      LABEL-
  FORMATTED-SUB s1, 01
  LOGFORMAT-SUB s1, 01
INSTRUCTION-SUB
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-091
      LABEL-
  FORMATTED-JUMP NZ, wait_40us
  LOGFORMAT-JUMP NZ, wait_40us[08F]
INSTRUCTION-JUMP
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-wait_40us
  OP2 VALUE-08F
    COMMENT-
    ADDRESS-092
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-093
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-093
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-093
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Delay of 1ms.
    ADDRESS-093
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-093
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Registers used s0, s1, s2
    ADDRESS-093
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-093
      LABEL-delay_1ms
  FORMATTED-LOAD s2, 19
  LOGFORMAT-LOAD s2, 19
INSTRUCTION-LOAD
   OPERAND1-s2
  OP1 VALUE-s2
   OPERAND2-19
  OP2 VALUE-19
    COMMENT-;25 x 40us = 1ms
    ADDRESS-094
      LABEL-wait_1ms
  FORMATTED-CALL delay_40us
  LOGFORMAT-CALL delay_40us[08E]
INSTRUCTION-CALL
   OPERAND1-delay_40us
  OP1 VALUE-08E
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-095
      LABEL-
  FORMATTED-SUB s2, 01
  LOGFORMAT-SUB s2, 01
INSTRUCTION-SUB
   OPERAND1-s2
  OP1 VALUE-s2
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-096
      LABEL-
  FORMATTED-JUMP NZ, wait_1ms
  LOGFORMAT-JUMP NZ, wait_1ms[094]
INSTRUCTION-JUMP
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-wait_1ms
  OP2 VALUE-094
    COMMENT-
    ADDRESS-097
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-098
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-098
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Delay of 20ms.
    ADDRESS-098
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-098
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Delay of 20ms used during initialisation.
    ADDRESS-098
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-098
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Registers used s0, s1, s2, s3
    ADDRESS-098
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-098
      LABEL-delay_20ms
  FORMATTED-LOAD s3, 14
  LOGFORMAT-LOAD s3, 14
INSTRUCTION-LOAD
   OPERAND1-s3
  OP1 VALUE-s3
   OPERAND2-14
  OP2 VALUE-14
    COMMENT-;20 x 1ms = 20ms
    ADDRESS-099
      LABEL-wait_20ms
  FORMATTED-CALL delay_1ms
  LOGFORMAT-CALL delay_1ms[093]
INSTRUCTION-CALL
   OPERAND1-delay_1ms
  OP1 VALUE-093
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-09A
      LABEL-
  FORMATTED-SUB s3, 01
  LOGFORMAT-SUB s3, 01
INSTRUCTION-SUB
   OPERAND1-s3
  OP1 VALUE-s3
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-09B
      LABEL-
  FORMATTED-JUMP NZ, wait_20ms
  LOGFORMAT-JUMP NZ, wait_20ms[099]
INSTRUCTION-JUMP
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-wait_20ms
  OP2 VALUE-099
    COMMENT-
    ADDRESS-09C
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-09D
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-09D
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Delay of approximately 1 second.
    ADDRESS-09D
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-09D
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Registers used s0, s1, s2, s3, s4
    ADDRESS-09D
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-09D
      LABEL-delay_1s
  FORMATTED-LOAD s4, 32
  LOGFORMAT-LOAD s4, 32
INSTRUCTION-LOAD
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-32
  OP2 VALUE-32
    COMMENT-;50 x 20ms = 1000ms
    ADDRESS-09E
      LABEL-wait_1s
  FORMATTED-CALL delay_20ms
  LOGFORMAT-CALL delay_20ms[098]
INSTRUCTION-CALL
   OPERAND1-delay_20ms
  OP1 VALUE-098
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-09F
      LABEL-
  FORMATTED-SUB s4, 01
  LOGFORMAT-SUB s4, 01
INSTRUCTION-SUB
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-0A0
      LABEL-
  FORMATTED-JUMP NZ, wait_1s
  LOGFORMAT-JUMP NZ, wait_1s[09E]
INSTRUCTION-JUMP
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-wait_1s
  OP2 VALUE-09E
    COMMENT-
    ADDRESS-0A1
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0A2
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0A2
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0A2
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0A2
      LABEL-delay_ms
  FORMATTED-CALL delay_1ms
  LOGFORMAT-CALL delay_1ms[093]
INSTRUCTION-CALL
   OPERAND1-delay_1ms
  OP1 VALUE-093
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 1ms x s3
    ADDRESS-0A3
      LABEL-
  FORMATTED-SUB s3, 01
  LOGFORMAT-SUB s3, 01
INSTRUCTION-SUB
   OPERAND1-s3
  OP1 VALUE-s3
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-0A4
      LABEL-
  FORMATTED-JUMP NZ, delay_ms
  LOGFORMAT-JUMP NZ, delay_ms[0A2]
INSTRUCTION-JUMP
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-delay_ms
  OP2 VALUE-0A2
    COMMENT-
    ADDRESS-0A5
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0A6
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;**************************************************************************************
    ADDRESS-0A6
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;LCD Character Module Routines
    ADDRESS-0A6
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;**************************************************************************************
    ADDRESS-0A6
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0A6
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;LCD module is a 16 character by 2 line display but all displays are very similar
    ADDRESS-0A6
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;The 4-wire data interface will be used (DB4 to DB7).
    ADDRESS-0A6
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0A6
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;The LCD modules are relatively slow and software delay loops are used to slow down
    ADDRESS-0A6
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;KCPSM3 adequately for the LCD to communicate. The delay routines are provided in
    ADDRESS-0A6
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;a different section (see above in this case).
    ADDRESS-0A6
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0A6
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0A6
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Pulse LCD enable signal 'E' high for greater than 230ns (1us is used).
    ADDRESS-0A6
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0A6
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Register s4 should define the current state of the LCD output port.
    ADDRESS-0A6
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0A6
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Registers used s0, s4
    ADDRESS-0A6
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0A6
      LABEL-LCD_pulse_E
  FORMATTED-OR s4, 01
  LOGFORMAT-OR s4, 01
INSTRUCTION-OR
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-;E=1
    ADDRESS-0A7
      LABEL-
  FORMATTED-OUTPUT s4, LCD_output_port
  LOGFORMAT-OUTPUT s4, LCD_output_port[00]
INSTRUCTION-OUTPUT
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-LCD_output_port
  OP2 VALUE-00
    COMMENT-
    ADDRESS-0A8
      LABEL-
  FORMATTED-CALL delay_1us
  LOGFORMAT-CALL delay_1us[08A]
INSTRUCTION-CALL
   OPERAND1-delay_1us
  OP1 VALUE-08A
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0A9
      LABEL-
  FORMATTED-AND s4, FE
  LOGFORMAT-AND s4, FE
INSTRUCTION-AND
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-FE
  OP2 VALUE-FE
    COMMENT-;E=0
    ADDRESS-0AA
      LABEL-
  FORMATTED-OUTPUT s4, LCD_output_port
  LOGFORMAT-OUTPUT s4, LCD_output_port[00]
INSTRUCTION-OUTPUT
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-LCD_output_port
  OP2 VALUE-00
    COMMENT-
    ADDRESS-0AB
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0AC
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0AC
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Write 4-bit instruction to LCD display.
    ADDRESS-0AC
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0AC
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;The 4-bit instruction should be provided in the upper 4-bits of register s4.
    ADDRESS-0AC
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Note that this routine does not release the master enable but as it is only
    ADDRESS-0AC
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;used during initialisation and as part of the 8-bit instruction write it
    ADDRESS-0AC
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;should be acceptable.
    ADDRESS-0AC
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0AC
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Registers used s4
    ADDRESS-0AC
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0AC
      LABEL-LCD_write_inst4
  FORMATTED-AND s4, F8
  LOGFORMAT-AND s4, F8
INSTRUCTION-AND
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-F8
  OP2 VALUE-F8
    COMMENT-;RS=0 Instruction, RW=0 Write, E=0
    ADDRESS-0AD
      LABEL-
  FORMATTED-OUTPUT s4, LCD_output_port
  LOGFORMAT-OUTPUT s4, LCD_output_port[00]
INSTRUCTION-OUTPUT
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-LCD_output_port
  OP2 VALUE-00
    COMMENT-;set up RS and RW >40ns before enable pulse
    ADDRESS-0AE
      LABEL-
  FORMATTED-CALL delay_1us
  LOGFORMAT-CALL delay_1us[08A]
INSTRUCTION-CALL
   OPERAND1-delay_1us
  OP1 VALUE-08A
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0AF
      LABEL-
  FORMATTED-CALL LCD_pulse_E
  LOGFORMAT-CALL LCD_pulse_E[0A6]
INSTRUCTION-CALL
   OPERAND1-LCD_pulse_E
  OP1 VALUE-0A6
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0B0
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0B1
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0B1
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0B1
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Write 8-bit instruction to LCD display.
    ADDRESS-0B1
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0B1
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;The 8-bit instruction should be provided in register s5.
    ADDRESS-0B1
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Instructions are written using the following sequence
    ADDRESS-0B1
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Upper nibble
    ADDRESS-0B1
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; wait >1us
    ADDRESS-0B1
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Lower nibble
    ADDRESS-0B1
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; wait >40us
    ADDRESS-0B1
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0B1
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Registers used s0, s1, s4, s5
    ADDRESS-0B1
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0B1
      LABEL-LCD_write_inst8
  FORMATTED-LOAD s4, s5
  LOGFORMAT-LOAD s4, s5
INSTRUCTION-LOAD
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-s5
  OP2 VALUE-s5
    COMMENT-
    ADDRESS-0B2
      LABEL-
  FORMATTED-AND s4, F0
  LOGFORMAT-AND s4, F0
INSTRUCTION-AND
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-F0
  OP2 VALUE-F0
    COMMENT-;LCD_drive=0, RS=0 Instruction, RW=0 Write, E=0
    ADDRESS-0B3
      LABEL-
  FORMATTED-OR s4, LCD_drive
  LOGFORMAT-OR s4, LCD_drive[08]
INSTRUCTION-OR
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-LCD_drive
  OP2 VALUE-08
    COMMENT-;LCD_drive=1
    ADDRESS-0B4
      LABEL-
  FORMATTED-CALL LCD_write_inst4
  LOGFORMAT-CALL LCD_write_inst4[0AC]
INSTRUCTION-CALL
   OPERAND1-LCD_write_inst4
  OP1 VALUE-0AC
   OPERAND2-
  OP2 VALUE-
    COMMENT-;write upper nibble
    ADDRESS-0B5
      LABEL-
  FORMATTED-CALL delay_1us
  LOGFORMAT-CALL delay_1us[08A]
INSTRUCTION-CALL
   OPERAND1-delay_1us
  OP1 VALUE-08A
   OPERAND2-
  OP2 VALUE-
    COMMENT-;wait >1us
    ADDRESS-0B6
      LABEL-
  FORMATTED-LOAD s4, s5
  LOGFORMAT-LOAD s4, s5
INSTRUCTION-LOAD
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-s5
  OP2 VALUE-s5
    COMMENT-;select lower nibble with
    ADDRESS-0B7
      LABEL-
  FORMATTED-SL1 s4
  LOGFORMAT-SL1 s4
INSTRUCTION-SL1
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-
  OP2 VALUE-
    COMMENT-;LCD_drive=1
    ADDRESS-0B8
      LABEL-
  FORMATTED-SL0 s4
  LOGFORMAT-SL0 s4
INSTRUCTION-SL0
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-
  OP2 VALUE-
    COMMENT-;RS=0 Instruction
    ADDRESS-0B9
      LABEL-
  FORMATTED-SL0 s4
  LOGFORMAT-SL0 s4
INSTRUCTION-SL0
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-
  OP2 VALUE-
    COMMENT-;RW=0 Write
    ADDRESS-0BA
      LABEL-
  FORMATTED-SL0 s4
  LOGFORMAT-SL0 s4
INSTRUCTION-SL0
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-
  OP2 VALUE-
    COMMENT-;E=0
    ADDRESS-0BB
      LABEL-
  FORMATTED-CALL LCD_write_inst4
  LOGFORMAT-CALL LCD_write_inst4[0AC]
INSTRUCTION-CALL
   OPERAND1-LCD_write_inst4
  OP1 VALUE-0AC
   OPERAND2-
  OP2 VALUE-
    COMMENT-;write lower nibble
    ADDRESS-0BC
      LABEL-
  FORMATTED-CALL delay_40us
  LOGFORMAT-CALL delay_40us[08E]
INSTRUCTION-CALL
   OPERAND1-delay_40us
  OP1 VALUE-08E
   OPERAND2-
  OP2 VALUE-
    COMMENT-;wait >40us
    ADDRESS-0BD
      LABEL-
  FORMATTED-LOAD s4, F0
  LOGFORMAT-LOAD s4, F0
INSTRUCTION-LOAD
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-F0
  OP2 VALUE-F0
    COMMENT-;Enable=0 RS=0 Instruction, RW=0 Write, E=0
    ADDRESS-0BE
      LABEL-
  FORMATTED-OUTPUT s4, LCD_output_port
  LOGFORMAT-OUTPUT s4, LCD_output_port[00]
INSTRUCTION-OUTPUT
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-LCD_output_port
  OP2 VALUE-00
    COMMENT-;Release master enable
    ADDRESS-0BF
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0C0
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0C0
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0C0
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0C0
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Write 8-bit data to LCD display.
    ADDRESS-0C0
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0C0
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;The 8-bit data should be provided in register s5.
    ADDRESS-0C0
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Data bytes are written using the following sequence
    ADDRESS-0C0
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Upper nibble
    ADDRESS-0C0
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; wait >1us
    ADDRESS-0C0
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Lower nibble
    ADDRESS-0C0
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; wait >40us
    ADDRESS-0C0
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0C0
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Registers used s0, s1, s4, s5
    ADDRESS-0C0
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0C0
      LABEL-LCD_write_data
  FORMATTED-LOAD s4, s5
  LOGFORMAT-LOAD s4, s5
INSTRUCTION-LOAD
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-s5
  OP2 VALUE-s5
    COMMENT-
    ADDRESS-0C1
      LABEL-
  FORMATTED-AND s4, F0
  LOGFORMAT-AND s4, F0
INSTRUCTION-AND
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-F0
  OP2 VALUE-F0
    COMMENT-;LCD_drive=0, RS=0 Instruction, RW=0 Write, E=0
    ADDRESS-0C2
      LABEL-
  FORMATTED-OR s4, 0C
  LOGFORMAT-OR s4, 0C
INSTRUCTION-OR
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-0C
  OP2 VALUE-0C
    COMMENT-;LCD_drive=1, RS=1 Data, RW=0 Write, E=0
    ADDRESS-0C3
      LABEL-
  FORMATTED-OUTPUT s4, LCD_output_port
  LOGFORMAT-OUTPUT s4, LCD_output_port[00]
INSTRUCTION-OUTPUT
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-LCD_output_port
  OP2 VALUE-00
    COMMENT-;set up RS and RW >40ns before enable pulse
    ADDRESS-0C4
      LABEL-
  FORMATTED-CALL delay_1us
  LOGFORMAT-CALL delay_1us[08A]
INSTRUCTION-CALL
   OPERAND1-delay_1us
  OP1 VALUE-08A
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0C5
      LABEL-
  FORMATTED-CALL LCD_pulse_E
  LOGFORMAT-CALL LCD_pulse_E[0A6]
INSTRUCTION-CALL
   OPERAND1-LCD_pulse_E
  OP1 VALUE-0A6
   OPERAND2-
  OP2 VALUE-
    COMMENT-;write upper nibble
    ADDRESS-0C6
      LABEL-
  FORMATTED-CALL delay_1us
  LOGFORMAT-CALL delay_1us[08A]
INSTRUCTION-CALL
   OPERAND1-delay_1us
  OP1 VALUE-08A
   OPERAND2-
  OP2 VALUE-
    COMMENT-;wait >1us
    ADDRESS-0C7
      LABEL-
  FORMATTED-LOAD s4, s5
  LOGFORMAT-LOAD s4, s5
INSTRUCTION-LOAD
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-s5
  OP2 VALUE-s5
    COMMENT-;select lower nibble with
    ADDRESS-0C8
      LABEL-
  FORMATTED-SL1 s4
  LOGFORMAT-SL1 s4
INSTRUCTION-SL1
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-
  OP2 VALUE-
    COMMENT-;LCD_drive=1
    ADDRESS-0C9
      LABEL-
  FORMATTED-SL1 s4
  LOGFORMAT-SL1 s4
INSTRUCTION-SL1
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-
  OP2 VALUE-
    COMMENT-;RS=1 Data
    ADDRESS-0CA
      LABEL-
  FORMATTED-SL0 s4
  LOGFORMAT-SL0 s4
INSTRUCTION-SL0
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-
  OP2 VALUE-
    COMMENT-;RW=0 Write
    ADDRESS-0CB
      LABEL-
  FORMATTED-SL0 s4
  LOGFORMAT-SL0 s4
INSTRUCTION-SL0
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-
  OP2 VALUE-
    COMMENT-;E=0
    ADDRESS-0CC
      LABEL-
  FORMATTED-OUTPUT s4, LCD_output_port
  LOGFORMAT-OUTPUT s4, LCD_output_port[00]
INSTRUCTION-OUTPUT
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-LCD_output_port
  OP2 VALUE-00
    COMMENT-;set up RS and RW >40ns before enable pulse
    ADDRESS-0CD
      LABEL-
  FORMATTED-CALL delay_1us
  LOGFORMAT-CALL delay_1us[08A]
INSTRUCTION-CALL
   OPERAND1-delay_1us
  OP1 VALUE-08A
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0CE
      LABEL-
  FORMATTED-CALL LCD_pulse_E
  LOGFORMAT-CALL LCD_pulse_E[0A6]
INSTRUCTION-CALL
   OPERAND1-LCD_pulse_E
  OP1 VALUE-0A6
   OPERAND2-
  OP2 VALUE-
    COMMENT-;write lower nibble
    ADDRESS-0CF
      LABEL-
  FORMATTED-CALL delay_40us
  LOGFORMAT-CALL delay_40us[08E]
INSTRUCTION-CALL
   OPERAND1-delay_40us
  OP1 VALUE-08E
   OPERAND2-
  OP2 VALUE-
    COMMENT-;wait >40us
    ADDRESS-0D0
      LABEL-
  FORMATTED-LOAD s4, F0
  LOGFORMAT-LOAD s4, F0
INSTRUCTION-LOAD
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-F0
  OP2 VALUE-F0
    COMMENT-;LCD_drive=0 RS=0 Instruction, RW=0 Write, E=0
    ADDRESS-0D1
      LABEL-
  FORMATTED-OUTPUT s4, LCD_output_port
  LOGFORMAT-OUTPUT s4, LCD_output_port[00]
INSTRUCTION-OUTPUT
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-LCD_output_port
  OP2 VALUE-00
    COMMENT-;Release master enable
    ADDRESS-0D2
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Reset and initialise display to communicate using 4-bit data mode
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Includes routine to clear the display.
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Requires the 4-bit instructions 3,3,3,2 to be sent with suitable delays
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;following by the 8-bit instructions to set up the display.
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;  28 = '001' Function set, '0' 4-bit mode, '1' 2-line, '0' 5x7 dot matrix, 'xx'
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;  06 = '000001' Entry mode, '1' increment, '0' no display shift
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;  0C = '00001' Display control, '1' display on, '0' cursor off, '0' cursor blink off
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;  01 = '00000001' Display clear
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Registers used s0, s1, s2, s3, s4
    ADDRESS-0D3
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0D3
      LABEL-LCD_reset
  FORMATTED-CALL delay_20ms
  LOGFORMAT-CALL delay_20ms[098]
INSTRUCTION-CALL
   OPERAND1-delay_20ms
  OP1 VALUE-098
   OPERAND2-
  OP2 VALUE-
    COMMENT-;wait more that 15ms for display to be ready
    ADDRESS-0D4
      LABEL-
  FORMATTED-LOAD s4, 30
  LOGFORMAT-LOAD s4, 30
INSTRUCTION-LOAD
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-30
  OP2 VALUE-30
    COMMENT-
    ADDRESS-0D5
      LABEL-
  FORMATTED-CALL LCD_write_inst4
  LOGFORMAT-CALL LCD_write_inst4[0AC]
INSTRUCTION-CALL
   OPERAND1-LCD_write_inst4
  OP1 VALUE-0AC
   OPERAND2-
  OP2 VALUE-
    COMMENT-;send '3'
    ADDRESS-0D6
      LABEL-
  FORMATTED-CALL delay_20ms
  LOGFORMAT-CALL delay_20ms[098]
INSTRUCTION-CALL
   OPERAND1-delay_20ms
  OP1 VALUE-098
   OPERAND2-
  OP2 VALUE-
    COMMENT-;wait >100us
    ADDRESS-0D7
      LABEL-
  FORMATTED-LOAD s4, 30
  LOGFORMAT-LOAD s4, 30
INSTRUCTION-LOAD
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-30
  OP2 VALUE-30
    COMMENT-
    ADDRESS-0D8
      LABEL-
  FORMATTED-CALL LCD_write_inst4
  LOGFORMAT-CALL LCD_write_inst4[0AC]
INSTRUCTION-CALL
   OPERAND1-LCD_write_inst4
  OP1 VALUE-0AC
   OPERAND2-
  OP2 VALUE-
    COMMENT-;send '3'
    ADDRESS-0D9
      LABEL-
  FORMATTED-CALL delay_20ms
  LOGFORMAT-CALL delay_20ms[098]
INSTRUCTION-CALL
   OPERAND1-delay_20ms
  OP1 VALUE-098
   OPERAND2-
  OP2 VALUE-
    COMMENT-;wait >100us
    ADDRESS-0DA
      LABEL-
  FORMATTED-LOAD s4, 30
  LOGFORMAT-LOAD s4, 30
INSTRUCTION-LOAD
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-30
  OP2 VALUE-30
    COMMENT-
    ADDRESS-0DB
      LABEL-
  FORMATTED-CALL LCD_write_inst4
  LOGFORMAT-CALL LCD_write_inst4[0AC]
INSTRUCTION-CALL
   OPERAND1-LCD_write_inst4
  OP1 VALUE-0AC
   OPERAND2-
  OP2 VALUE-
    COMMENT-;send '3'
    ADDRESS-0DC
      LABEL-
  FORMATTED-CALL delay_20ms
  LOGFORMAT-CALL delay_20ms[098]
INSTRUCTION-CALL
   OPERAND1-delay_20ms
  OP1 VALUE-098
   OPERAND2-
  OP2 VALUE-
    COMMENT-;wait >100us
    ADDRESS-0DD
      LABEL-
  FORMATTED-LOAD s4, 20
  LOGFORMAT-LOAD s4, 20
INSTRUCTION-LOAD
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-20
  OP2 VALUE-20
    COMMENT-
    ADDRESS-0DE
      LABEL-
  FORMATTED-CALL LCD_write_inst4
  LOGFORMAT-CALL LCD_write_inst4[0AC]
INSTRUCTION-CALL
   OPERAND1-LCD_write_inst4
  OP1 VALUE-0AC
   OPERAND2-
  OP2 VALUE-
    COMMENT-;send '2'
    ADDRESS-0DF
      LABEL-
  FORMATTED-CALL delay_40us
  LOGFORMAT-CALL delay_40us[08E]
INSTRUCTION-CALL
   OPERAND1-delay_40us
  OP1 VALUE-08E
   OPERAND2-
  OP2 VALUE-
    COMMENT-;wait >40us
    ADDRESS-0E0
      LABEL-
  FORMATTED-LOAD s5, 28
  LOGFORMAT-LOAD s5, 28
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-28
  OP2 VALUE-28
    COMMENT-;Function set
    ADDRESS-0E1
      LABEL-
  FORMATTED-CALL LCD_write_inst8
  LOGFORMAT-CALL LCD_write_inst8[0B1]
INSTRUCTION-CALL
   OPERAND1-LCD_write_inst8
  OP1 VALUE-0B1
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0E2
      LABEL-
  FORMATTED-LOAD s5, 06
  LOGFORMAT-LOAD s5, 06
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-06
  OP2 VALUE-06
    COMMENT-;Entry mode
    ADDRESS-0E3
      LABEL-
  FORMATTED-CALL LCD_write_inst8
  LOGFORMAT-CALL LCD_write_inst8[0B1]
INSTRUCTION-CALL
   OPERAND1-LCD_write_inst8
  OP1 VALUE-0B1
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0E4
      LABEL-
  FORMATTED-LOAD s5, 0C
  LOGFORMAT-LOAD s5, 0C
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-0C
  OP2 VALUE-0C
    COMMENT-;Display control
    ADDRESS-0E5
      LABEL-
  FORMATTED-CALL LCD_write_inst8
  LOGFORMAT-CALL LCD_write_inst8[0B1]
INSTRUCTION-CALL
   OPERAND1-LCD_write_inst8
  OP1 VALUE-0B1
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0E6
      LABEL-LCD_clear
  FORMATTED-LOAD s5, 01
  LOGFORMAT-LOAD s5, 01
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-;Display clear
    ADDRESS-0E7
      LABEL-
  FORMATTED-CALL LCD_write_inst8
  LOGFORMAT-CALL LCD_write_inst8[0B1]
INSTRUCTION-CALL
   OPERAND1-LCD_write_inst8
  OP1 VALUE-0B1
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0E8
      LABEL-
  FORMATTED-CALL delay_1ms
  LOGFORMAT-CALL delay_1ms[093]
INSTRUCTION-CALL
   OPERAND1-delay_1ms
  OP1 VALUE-093
   OPERAND2-
  OP2 VALUE-
    COMMENT-;wait >1.64ms for display to clear
    ADDRESS-0E9
      LABEL-
  FORMATTED-CALL delay_1ms
  LOGFORMAT-CALL delay_1ms[093]
INSTRUCTION-CALL
   OPERAND1-delay_1ms
  OP1 VALUE-093
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0EA
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0EB
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0EB
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Position the cursor ready for characters to be written.
    ADDRESS-0EB
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;The display is formed of 2 lines of 16 characters and each
    ADDRESS-0EB
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;position has a corresponding address as indicated below.
    ADDRESS-0EB
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0EB
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;                   Character position
    ADDRESS-0EB
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;           0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15
    ADDRESS-0EB
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0EB
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Line 1 - 80 81 82 83 84 85 86 87 88 89 8A 8B 8C 8D 8E 8F
    ADDRESS-0EB
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Line 2 - C0 C1 C2 C3 C4 C5 C6 C7 C8 C9 CA CB CC CD CE CF
    ADDRESS-0EB
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0EB
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;This routine will set the cursor position using the value provided
    ADDRESS-0EB
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;in register s5. The upper nibble will define the line and the lower
    ADDRESS-0EB
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;nibble the character position on the line.
    ADDRESS-0EB
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Example s5 = 2B will position the cursor on line 2 position 11
    ADDRESS-0EB
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0EB
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Registers used s0, s1, s2, s3, s4
    ADDRESS-0EB
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0EB
      LABEL-LCD_cursor
  FORMATTED-TEST s5, 10
  LOGFORMAT-TEST s5, 10
INSTRUCTION-TEST
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-10
  OP2 VALUE-10
    COMMENT-;test for line 1
    ADDRESS-0EC
      LABEL-
  FORMATTED-JUMP Z, set_line2
  LOGFORMAT-JUMP Z, set_line2[0F1]
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-set_line2
  OP2 VALUE-0F1
    COMMENT-
    ADDRESS-0ED
      LABEL-
  FORMATTED-AND s5, 0F
  LOGFORMAT-AND s5, 0F
INSTRUCTION-AND
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-0F
  OP2 VALUE-0F
    COMMENT-;make address in range 80 to 8F for line 1
    ADDRESS-0EE
      LABEL-
  FORMATTED-OR s5, 80
  LOGFORMAT-OR s5, 80
INSTRUCTION-OR
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-80
  OP2 VALUE-80
    COMMENT-
    ADDRESS-0EF
      LABEL-
  FORMATTED-CALL LCD_write_inst8
  LOGFORMAT-CALL LCD_write_inst8[0B1]
INSTRUCTION-CALL
   OPERAND1-LCD_write_inst8
  OP1 VALUE-0B1
   OPERAND2-
  OP2 VALUE-
    COMMENT-;instruction write to set cursor
    ADDRESS-0F0
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0F1
      LABEL-set_line2
  FORMATTED-AND s5, 0F
  LOGFORMAT-AND s5, 0F
INSTRUCTION-AND
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-0F
  OP2 VALUE-0F
    COMMENT-;make address in range C0 to CF for line 2
    ADDRESS-0F2
      LABEL-
  FORMATTED-OR s5, C0
  LOGFORMAT-OR s5, C0
INSTRUCTION-OR
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-C0
  OP2 VALUE-C0
    COMMENT-
    ADDRESS-0F3
      LABEL-
  FORMATTED-CALL LCD_write_inst8
  LOGFORMAT-CALL LCD_write_inst8[0B1]
INSTRUCTION-CALL
   OPERAND1-LCD_write_inst8
  OP1 VALUE-0B1
   OPERAND2-
  OP2 VALUE-
    COMMENT-;instruction write to set cursor
    ADDRESS-0F4
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0F5
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0F5
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;This routine will shift the complete display one position to the left.
    ADDRESS-0F5
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;The cursor position and LCD memory contents will not change.
    ADDRESS-0F5
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0F5
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0F5
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Registers used s0, s1, s2, s3, s4, s5
    ADDRESS-0F5
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0F5
      LABEL-LCD_shift_left
  FORMATTED-LOAD s5, 18
  LOGFORMAT-LOAD s5, 18
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-18
  OP2 VALUE-18
    COMMENT-;shift display left
    ADDRESS-0F6
      LABEL-
  FORMATTED-CALL LCD_write_inst8
  LOGFORMAT-CALL LCD_write_inst8[0B1]
INSTRUCTION-CALL
   OPERAND1-LCD_write_inst8
  OP1 VALUE-0B1
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0F7
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0F8
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0F8
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-0F8
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;; An Interrupt Service Routine (ISR) is required if using interrupts
    ADDRESS-0F8
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;; Interrupts are automatically disabled when an interrupt is recognized
    ADDRESS-0F8
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;; Never re-enable interrupts during the ISR
    ADDRESS-0F8
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;; Use RETURNI DISABLE to leave interrupts disabled
    ADDRESS-0F8
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-0F8
      LABEL-ISR
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-0F8
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; <<< your interrupt code here >>>
    ADDRESS-0F8
      LABEL-
  FORMATTED-RETURNI ENABLE
  LOGFORMAT-RETURNI ENABLE
INSTRUCTION-RETURNI
   OPERAND1-ENABLE
  OP1 VALUE-ENABLE
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Return from interrupt service routine
    ADDRESS-0F9
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-0F9
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;; Interrupt service routine vector.
    ADDRESS-0F9
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-3FF
      LABEL-
  FORMATTED-ADDRESS 3FF
  LOGFORMAT-ADDRESS 3FF
INSTRUCTION-ADDRESS
   OPERAND1-3FF
  OP1 VALUE-3FF
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Interrupt vector is located at highest instruction address
    ADDRESS-3FF
      LABEL-
  FORMATTED-JUMP ISR
  LOGFORMAT-JUMP ISR[0F8]
INSTRUCTION-JUMP
   OPERAND1-ISR
  OP1 VALUE-0F8
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Jump to interrupt service routine, ISR
    ADDRESS-3FF
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-3FF
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;
    ADDRESS-3FF
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
