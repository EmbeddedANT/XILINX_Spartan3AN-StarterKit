    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Use CONSTANT declarations to define output port addresses
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT PORT_A, 00
  LOGFORMAT-CONSTANT PORT_A, 00
INSTRUCTION-CONSTANT
   OPERAND1-PORT_A
  OP1 VALUE-PORT_A
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-;
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Use CONSTANT declarations to define leds sequence
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT LED_SEQUENCE_1, 01
  LOGFORMAT-CONSTANT LED_SEQUENCE_1, 01
INSTRUCTION-CONSTANT
   OPERAND1-LED_SEQUENCE_1
  OP1 VALUE-LED_SEQUENCE_1
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-;
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT LED_SEQUENCE_2, 02
  LOGFORMAT-CONSTANT LED_SEQUENCE_2, 02
INSTRUCTION-CONSTANT
   OPERAND1-LED_SEQUENCE_2
  OP1 VALUE-LED_SEQUENCE_2
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-;
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT LED_SEQUENCE_3, 04
  LOGFORMAT-CONSTANT LED_SEQUENCE_3, 04
INSTRUCTION-CONSTANT
   OPERAND1-LED_SEQUENCE_3
  OP1 VALUE-LED_SEQUENCE_3
   OPERAND2-04
  OP2 VALUE-04
    COMMENT-;
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT LED_SEQUENCE_4, 08
  LOGFORMAT-CONSTANT LED_SEQUENCE_4, 08
INSTRUCTION-CONSTANT
   OPERAND1-LED_SEQUENCE_4
  OP1 VALUE-LED_SEQUENCE_4
   OPERAND2-08
  OP2 VALUE-08
    COMMENT-;
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT LED_SEQUENCE_5, 10
  LOGFORMAT-CONSTANT LED_SEQUENCE_5, 10
INSTRUCTION-CONSTANT
   OPERAND1-LED_SEQUENCE_5
  OP1 VALUE-LED_SEQUENCE_5
   OPERAND2-10
  OP2 VALUE-10
    COMMENT-;
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT LED_SEQUENCE_6, 20
  LOGFORMAT-CONSTANT LED_SEQUENCE_6, 20
INSTRUCTION-CONSTANT
   OPERAND1-LED_SEQUENCE_6
  OP1 VALUE-LED_SEQUENCE_6
   OPERAND2-20
  OP2 VALUE-20
    COMMENT-;
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT LED_SEQUENCE_7, 40
  LOGFORMAT-CONSTANT LED_SEQUENCE_7, 40
INSTRUCTION-CONSTANT
   OPERAND1-LED_SEQUENCE_7
  OP1 VALUE-LED_SEQUENCE_7
   OPERAND2-40
  OP2 VALUE-40
    COMMENT-;
    ADDRESS-000
      LABEL-
  FORMATTED-CONSTANT LED_SEQUENCE_8, 80
  LOGFORMAT-CONSTANT LED_SEQUENCE_8, 80
INSTRUCTION-CONSTANT
   OPERAND1-LED_SEQUENCE_8
  OP1 VALUE-LED_SEQUENCE_8
   OPERAND2-80
  OP2 VALUE-80
    COMMENT-;
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-000
      LABEL-
  FORMATTED-ADDRESS 000
  LOGFORMAT-ADDRESS 000
INSTRUCTION-ADDRESS
   OPERAND1-000
  OP1 VALUE-000
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Programs always start at reset vector 0
    ADDRESS-000
      LABEL-
  FORMATTED-DISABLE INTERRUPT
  LOGFORMAT-DISABLE INTERRUPT
INSTRUCTION-DISABLE
   OPERAND1-INTERRUPT
  OP1 VALUE-INTERRUPT
   OPERAND2-
  OP2 VALUE-
    COMMENT-; If using interrupts, be sure to enable the INTERRUPT input
    ADDRESS-001
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-001
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;
    ADDRESS-001
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-001
      LABEL-BEGIN
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-001
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; <<< your code here >>>
    ADDRESS-001
      LABEL-
  FORMATTED-LOAD s0, LED_SEQUENCE_1
  LOGFORMAT-LOAD s0, LED_SEQUENCE_1[01]
INSTRUCTION-LOAD
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-LED_SEQUENCE_1
  OP2 VALUE-01
    COMMENT-
    ADDRESS-002
      LABEL-
  FORMATTED-OUTPUT s0, PORT_A
  LOGFORMAT-OUTPUT s0, PORT_A[00]
INSTRUCTION-OUTPUT
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-PORT_A
  OP2 VALUE-00
    COMMENT-
    ADDRESS-003
      LABEL-
  FORMATTED-CALL delay
  LOGFORMAT-CALL delay[01A]
INSTRUCTION-CALL
   OPERAND1-delay
  OP1 VALUE-01A
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-004
      LABEL-
  FORMATTED-LOAD s0, LED_SEQUENCE_2
  LOGFORMAT-LOAD s0, LED_SEQUENCE_2[02]
INSTRUCTION-LOAD
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-LED_SEQUENCE_2
  OP2 VALUE-02
    COMMENT-
    ADDRESS-005
      LABEL-
  FORMATTED-OUTPUT s0, PORT_A
  LOGFORMAT-OUTPUT s0, PORT_A[00]
INSTRUCTION-OUTPUT
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-PORT_A
  OP2 VALUE-00
    COMMENT-
    ADDRESS-006
      LABEL-
  FORMATTED-CALL delay
  LOGFORMAT-CALL delay[01A]
INSTRUCTION-CALL
   OPERAND1-delay
  OP1 VALUE-01A
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-007
      LABEL-
  FORMATTED-LOAD s0, LED_SEQUENCE_3
  LOGFORMAT-LOAD s0, LED_SEQUENCE_3[04]
INSTRUCTION-LOAD
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-LED_SEQUENCE_3
  OP2 VALUE-04
    COMMENT-
    ADDRESS-008
      LABEL-
  FORMATTED-OUTPUT s0, PORT_A
  LOGFORMAT-OUTPUT s0, PORT_A[00]
INSTRUCTION-OUTPUT
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-PORT_A
  OP2 VALUE-00
    COMMENT-
    ADDRESS-009
      LABEL-
  FORMATTED-CALL delay
  LOGFORMAT-CALL delay[01A]
INSTRUCTION-CALL
   OPERAND1-delay
  OP1 VALUE-01A
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-00A
      LABEL-
  FORMATTED-LOAD s0, LED_SEQUENCE_4
  LOGFORMAT-LOAD s0, LED_SEQUENCE_4[08]
INSTRUCTION-LOAD
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-LED_SEQUENCE_4
  OP2 VALUE-08
    COMMENT-
    ADDRESS-00B
      LABEL-
  FORMATTED-OUTPUT s0, PORT_A
  LOGFORMAT-OUTPUT s0, PORT_A[00]
INSTRUCTION-OUTPUT
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-PORT_A
  OP2 VALUE-00
    COMMENT-
    ADDRESS-00C
      LABEL-
  FORMATTED-CALL delay
  LOGFORMAT-CALL delay[01A]
INSTRUCTION-CALL
   OPERAND1-delay
  OP1 VALUE-01A
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-00D
      LABEL-
  FORMATTED-LOAD s0, LED_SEQUENCE_5
  LOGFORMAT-LOAD s0, LED_SEQUENCE_5[10]
INSTRUCTION-LOAD
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-LED_SEQUENCE_5
  OP2 VALUE-10
    COMMENT-
    ADDRESS-00E
      LABEL-
  FORMATTED-OUTPUT s0, PORT_A
  LOGFORMAT-OUTPUT s0, PORT_A[00]
INSTRUCTION-OUTPUT
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-PORT_A
  OP2 VALUE-00
    COMMENT-
    ADDRESS-00F
      LABEL-
  FORMATTED-CALL delay
  LOGFORMAT-CALL delay[01A]
INSTRUCTION-CALL
   OPERAND1-delay
  OP1 VALUE-01A
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-010
      LABEL-
  FORMATTED-LOAD s0, LED_SEQUENCE_6
  LOGFORMAT-LOAD s0, LED_SEQUENCE_6[20]
INSTRUCTION-LOAD
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-LED_SEQUENCE_6
  OP2 VALUE-20
    COMMENT-
    ADDRESS-011
      LABEL-
  FORMATTED-OUTPUT s0, PORT_A
  LOGFORMAT-OUTPUT s0, PORT_A[00]
INSTRUCTION-OUTPUT
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-PORT_A
  OP2 VALUE-00
    COMMENT-
    ADDRESS-012
      LABEL-
  FORMATTED-CALL delay
  LOGFORMAT-CALL delay[01A]
INSTRUCTION-CALL
   OPERAND1-delay
  OP1 VALUE-01A
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-013
      LABEL-
  FORMATTED-LOAD s0, LED_SEQUENCE_7
  LOGFORMAT-LOAD s0, LED_SEQUENCE_7[40]
INSTRUCTION-LOAD
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-LED_SEQUENCE_7
  OP2 VALUE-40
    COMMENT-
    ADDRESS-014
      LABEL-
  FORMATTED-OUTPUT s0, PORT_A
  LOGFORMAT-OUTPUT s0, PORT_A[00]
INSTRUCTION-OUTPUT
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-PORT_A
  OP2 VALUE-00
    COMMENT-
    ADDRESS-015
      LABEL-
  FORMATTED-CALL delay
  LOGFORMAT-CALL delay[01A]
INSTRUCTION-CALL
   OPERAND1-delay
  OP1 VALUE-01A
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-016
      LABEL-
  FORMATTED-LOAD s0, LED_SEQUENCE_8
  LOGFORMAT-LOAD s0, LED_SEQUENCE_8[80]
INSTRUCTION-LOAD
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-LED_SEQUENCE_8
  OP2 VALUE-80
    COMMENT-
    ADDRESS-017
      LABEL-
  FORMATTED-OUTPUT s0, PORT_A
  LOGFORMAT-OUTPUT s0, PORT_A[00]
INSTRUCTION-OUTPUT
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-PORT_A
  OP2 VALUE-00
    COMMENT-
    ADDRESS-018
      LABEL-
  FORMATTED-CALL delay
  LOGFORMAT-CALL delay[01A]
INSTRUCTION-CALL
   OPERAND1-delay
  OP1 VALUE-01A
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-019
      LABEL-
  FORMATTED-JUMP BEGIN
  LOGFORMAT-JUMP BEGIN[001]
INSTRUCTION-JUMP
   OPERAND1-BEGIN
  OP1 VALUE-001
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Embedded applications never end
    ADDRESS-01A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-01A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Delay routine (~0.5s.)
    ADDRESS-01A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-01A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; PicoBlaze requires 2 clocks per instruction
    ADDRESS-01A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 2 + (4 + (4 + 4*256 + 4) * 256 + 4)*DELAY_LOOP + 2 =
    ADDRESS-01A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 500ms = (4 + 264200*DELAY_LOOP )*(1/50MHz)
    ADDRESS-01A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; DELAY_LOOP = 0x5E
    ADDRESS-01A
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Use CONSTANT declarations to time delay refinition
    ADDRESS-01A
      LABEL-
  FORMATTED-CONSTANT DELAY_LOOP, 5E
  LOGFORMAT-CONSTANT DELAY_LOOP, 5E
INSTRUCTION-CONSTANT
   OPERAND1-DELAY_LOOP
  OP1 VALUE-DELAY_LOOP
   OPERAND2-5E
  OP2 VALUE-5E
    COMMENT-; Loop delay
    ADDRESS-01A
      LABEL-delay
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-01A
      LABEL-
  FORMATTED-LOAD s2, 00
  LOGFORMAT-LOAD s2, 00
INSTRUCTION-LOAD
   OPERAND1-s2
  OP1 VALUE-s2
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-; 2
    ADDRESS-01B
      LABEL-rpt3
  FORMATTED-ADD s2, 01
  LOGFORMAT-ADD s2, 01
INSTRUCTION-ADD
   OPERAND1-s2
  OP1 VALUE-s2
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-; 2---------------------------------------------|
    ADDRESS-01C
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;  ---------------------------------------------|
    ADDRESS-01C
      LABEL-
  FORMATTED-LOAD s1, 00
  LOGFORMAT-LOAD s1, 00
INSTRUCTION-LOAD
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-; 2---------------------------------------------|
    ADDRESS-01D
      LABEL-rpt2
  FORMATTED-ADD s1, 01
  LOGFORMAT-ADD s1, 01
INSTRUCTION-ADD
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-; 2-------------------------------------|
    ADDRESS-01E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;  -------------------------------------|
    ADDRESS-01E
      LABEL-
  FORMATTED-LOAD s0, 00
  LOGFORMAT-LOAD s0, 00
INSTRUCTION-LOAD
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-; 2-------------------------------------|
    ADDRESS-01F
      LABEL-rpt1
  FORMATTED-ADD s0, 01
  LOGFORMAT-ADD s0, 01
INSTRUCTION-ADD
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-; 2 ---------------|
    ADDRESS-020
      LABEL-
  FORMATTED-JUMP NZ, rpt1
  LOGFORMAT-JUMP NZ, rpt1[01F]
INSTRUCTION-JUMP
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-rpt1
  OP2 VALUE-01F
    COMMENT-; 2 ----------4*256|
    ADDRESS-021
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;  -------------------------------------|
    ADDRESS-021
      LABEL-
  FORMATTED-COMPARE s1, 00
  LOGFORMAT-COMPARE s1, 00
INSTRUCTION-COMPARE
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-; 2-------------------------------------|
    ADDRESS-022
      LABEL-
  FORMATTED-JUMP NZ, rpt2
  LOGFORMAT-JUMP NZ, rpt2[01D]
INSTRUCTION-JUMP
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-rpt2
  OP2 VALUE-01D
    COMMENT-; 2----------------(4 + 4*256 + 4) * 256|
    ADDRESS-023
      LABEL-
  FORMATTED-COMPARE s2, DELAY_LOOP
  LOGFORMAT-COMPARE s2, DELAY_LOOP[5E]
INSTRUCTION-COMPARE
   OPERAND1-s2
  OP1 VALUE-s2
   OPERAND2-DELAY_LOOP
  OP2 VALUE-5E
    COMMENT-; 2---------------------------------------------|
    ADDRESS-024
      LABEL-
  FORMATTED-JUMP NZ, rpt3
  LOGFORMAT-JUMP NZ, rpt3[01B]
INSTRUCTION-JUMP
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-rpt3
  OP2 VALUE-01B
    COMMENT-; 2---(4 + (4 + 4*256 + 4) * 256 + 4)*DELAY_LOOP|
    ADDRESS-025
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 2
    ADDRESS-026
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-026
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;; An Interrupt Service Routine (ISR) is required if using interrupts
    ADDRESS-026
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;; Interrupts are automatically disabled when an interrupt is recognized
    ADDRESS-026
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;; Never re-enable interrupts during the ISR
    ADDRESS-026
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;; Use RETURNI DISABLE to leave interrupts disabled
    ADDRESS-026
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-026
      LABEL-ISR
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-026
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; <<< your interrupt code here >>>
    ADDRESS-026
      LABEL-
  FORMATTED-RETURNI ENABLE
  LOGFORMAT-RETURNI ENABLE
INSTRUCTION-RETURNI
   OPERAND1-ENABLE
  OP1 VALUE-ENABLE
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Return from interrupt service routine
    ADDRESS-027
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-027
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;; Interrupt service routine vector.
    ADDRESS-027
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-3FF
      LABEL-
  FORMATTED-ADDRESS 3FF
  LOGFORMAT-ADDRESS 3FF
INSTRUCTION-ADDRESS
   OPERAND1-3FF
  OP1 VALUE-3FF
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Interrupt vector is located at highest instruction address
    ADDRESS-3FF
      LABEL-
  FORMATTED-JUMP ISR
  LOGFORMAT-JUMP ISR[026]
INSTRUCTION-JUMP
   OPERAND1-ISR
  OP1 VALUE-026
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Jump to interrupt service routine, ISR
    ADDRESS-3FF
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
    ADDRESS-3FF
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;
    ADDRESS-3FF
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;;============================================================================
